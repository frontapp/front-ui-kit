/*! For license information please see 917.3b876742.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunk_frontapp_ui_kit=self.webpackChunk_frontapp_ui_kit||[]).push([[917],{"./node_modules/react-is/cjs/react-is.production.js":(__unused_webpack_module,exports)=>{var REACT_ELEMENT_TYPE=Symbol.for("react.transitional.element"),REACT_PORTAL_TYPE=Symbol.for("react.portal"),REACT_FRAGMENT_TYPE=Symbol.for("react.fragment"),REACT_STRICT_MODE_TYPE=Symbol.for("react.strict_mode"),REACT_PROFILER_TYPE=Symbol.for("react.profiler"),REACT_CONSUMER_TYPE=Symbol.for("react.consumer"),REACT_CONTEXT_TYPE=Symbol.for("react.context"),REACT_FORWARD_REF_TYPE=Symbol.for("react.forward_ref"),REACT_SUSPENSE_TYPE=Symbol.for("react.suspense"),REACT_SUSPENSE_LIST_TYPE=Symbol.for("react.suspense_list"),REACT_MEMO_TYPE=Symbol.for("react.memo"),REACT_LAZY_TYPE=Symbol.for("react.lazy"),REACT_VIEW_TRANSITION_TYPE=Symbol.for("react.view_transition"),REACT_CLIENT_REFERENCE=Symbol.for("react.client.reference");function typeOf(object){if("object"==typeof object&&null!==object){var $$typeof=object.$$typeof;switch($$typeof){case REACT_ELEMENT_TYPE:switch(object=object.type){case REACT_FRAGMENT_TYPE:case REACT_PROFILER_TYPE:case REACT_STRICT_MODE_TYPE:case REACT_SUSPENSE_TYPE:case REACT_SUSPENSE_LIST_TYPE:case REACT_VIEW_TRANSITION_TYPE:return object;default:switch(object=object&&object.$$typeof){case REACT_CONTEXT_TYPE:case REACT_FORWARD_REF_TYPE:case REACT_LAZY_TYPE:case REACT_MEMO_TYPE:case REACT_CONSUMER_TYPE:return object;default:return $$typeof}}case REACT_PORTAL_TYPE:return $$typeof}}}exports.ContextConsumer=REACT_CONSUMER_TYPE,exports.ContextProvider=REACT_CONTEXT_TYPE,exports.Element=REACT_ELEMENT_TYPE,exports.ForwardRef=REACT_FORWARD_REF_TYPE,exports.Fragment=REACT_FRAGMENT_TYPE,exports.Lazy=REACT_LAZY_TYPE,exports.Memo=REACT_MEMO_TYPE,exports.Portal=REACT_PORTAL_TYPE,exports.Profiler=REACT_PROFILER_TYPE,exports.StrictMode=REACT_STRICT_MODE_TYPE,exports.Suspense=REACT_SUSPENSE_TYPE,exports.SuspenseList=REACT_SUSPENSE_LIST_TYPE,exports.isContextConsumer=function(object){return typeOf(object)===REACT_CONSUMER_TYPE},exports.isContextProvider=function(object){return typeOf(object)===REACT_CONTEXT_TYPE},exports.isElement=function(object){return"object"==typeof object&&null!==object&&object.$$typeof===REACT_ELEMENT_TYPE},exports.isForwardRef=function(object){return typeOf(object)===REACT_FORWARD_REF_TYPE},exports.isFragment=function(object){return typeOf(object)===REACT_FRAGMENT_TYPE},exports.isLazy=function(object){return typeOf(object)===REACT_LAZY_TYPE},exports.isMemo=function(object){return typeOf(object)===REACT_MEMO_TYPE},exports.isPortal=function(object){return typeOf(object)===REACT_PORTAL_TYPE},exports.isProfiler=function(object){return typeOf(object)===REACT_PROFILER_TYPE},exports.isStrictMode=function(object){return typeOf(object)===REACT_STRICT_MODE_TYPE},exports.isSuspense=function(object){return typeOf(object)===REACT_SUSPENSE_TYPE},exports.isSuspenseList=function(object){return typeOf(object)===REACT_SUSPENSE_LIST_TYPE},exports.isValidElementType=function(type){return"string"==typeof type||"function"==typeof type||type===REACT_FRAGMENT_TYPE||type===REACT_PROFILER_TYPE||type===REACT_STRICT_MODE_TYPE||type===REACT_SUSPENSE_TYPE||type===REACT_SUSPENSE_LIST_TYPE||"object"==typeof type&&null!==type&&(type.$$typeof===REACT_LAZY_TYPE||type.$$typeof===REACT_MEMO_TYPE||type.$$typeof===REACT_CONTEXT_TYPE||type.$$typeof===REACT_CONSUMER_TYPE||type.$$typeof===REACT_FORWARD_REF_TYPE||type.$$typeof===REACT_CLIENT_REFERENCE||void 0!==type.getModuleId)},exports.typeOf=typeOf},"./node_modules/react-spring/dist/react-spring.modern.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{CS:()=>animated,pn:()=>useTransition});var updateQueue=makeQueue(),raf=fn=>schedule(fn,updateQueue),writeQueue=makeQueue();raf.write=fn=>schedule(fn,writeQueue);var onStartQueue=makeQueue();raf.onStart=fn=>schedule(fn,onStartQueue);var onFrameQueue=makeQueue();raf.onFrame=fn=>schedule(fn,onFrameQueue);var onFinishQueue=makeQueue();raf.onFinish=fn=>schedule(fn,onFinishQueue);var timeouts=[];raf.setTimeout=(handler,ms)=>{const time=raf.now()+ms,cancel=()=>{const i=timeouts.findIndex(t=>t.cancel==cancel);~i&&timeouts.splice(i,1),pendingCount-=~i?1:0},timeout={time,handler,cancel};return timeouts.splice(findTimeout(time),0,timeout),pendingCount+=1,start(),timeout};var findTimeout=time=>~(~timeouts.findIndex(t=>t.time>time)||~timeouts.length);raf.cancel=fn=>{onStartQueue.delete(fn),onFrameQueue.delete(fn),onFinishQueue.delete(fn),updateQueue.delete(fn),writeQueue.delete(fn)},raf.sync=fn=>{sync=!0,raf.batchedUpdates(fn),sync=!1},raf.throttle=fn=>{let lastArgs;function queuedFn(){try{fn(...lastArgs)}finally{lastArgs=null}}function throttled(...args){lastArgs=args,raf.onStart(queuedFn)}return throttled.handler=fn,throttled.cancel=()=>{onStartQueue.delete(queuedFn),lastArgs=null},throttled};var nativeRaf="undefined"!=typeof window?window.requestAnimationFrame:()=>{};raf.use=impl=>nativeRaf=impl,raf.now="undefined"!=typeof performance?()=>performance.now():Date.now,raf.batchedUpdates=fn=>fn(),raf.catch=console.error,raf.frameLoop="always",raf.advance=()=>{"demand"!==raf.frameLoop?console.warn("Cannot call the manual advancement of rafz whilst frameLoop is not set as demand"):update()};var ts=-1,pendingCount=0,sync=!1;function schedule(fn,queue){sync?(queue.delete(fn),fn(0)):(queue.add(fn),start())}function start(){ts<0&&(ts=0,"demand"!==raf.frameLoop&&nativeRaf(loop))}function loop(){~ts&&(nativeRaf(loop),raf.batchedUpdates(update))}function update(){const prevTs=ts;ts=raf.now();const count=findTimeout(ts);count&&(eachSafely(timeouts.splice(0,count),t=>t.handler()),pendingCount-=count),pendingCount?(onStartQueue.flush(),updateQueue.flush(prevTs?Math.min(64,ts-prevTs):16.667),onFrameQueue.flush(),writeQueue.flush(),onFinishQueue.flush()):function stop(){ts=-1}()}function makeQueue(){let next=new Set,current=next;return{add(fn){pendingCount+=current!=next||next.has(fn)?0:1,next.add(fn)},delete:fn=>(pendingCount-=current==next&&next.has(fn)?1:0,next.delete(fn)),flush(arg){current.size&&(next=new Set,pendingCount-=current.size,eachSafely(current,fn=>fn(arg)&&next.add(fn)),pendingCount+=next.size,current=next)}}}function eachSafely(values,each){values.forEach(value=>{try{each(value)}catch(e){raf.catch(e)}})}var react=__webpack_require__("./node_modules/react/index.js"),__defProp=Object.defineProperty,globals_exports={};function noop(){}((target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})})(globals_exports,{assign:()=>react_spring_shared_modern_assign,colors:()=>colors,createStringInterpolator:()=>createStringInterpolator,skipAnimation:()=>skipAnimation,to:()=>to,willAdvance:()=>willAdvance});var is={arr:Array.isArray,obj:a=>!!a&&"Object"===a.constructor.name,fun:a=>"function"==typeof a,str:a=>"string"==typeof a,num:a=>"number"==typeof a,und:a=>void 0===a};function isEqual(a,b){if(is.arr(a)){if(!is.arr(b)||a.length!==b.length)return!1;for(let i=0;i<a.length;i++)if(a[i]!==b[i])return!1;return!0}return a===b}var react_spring_shared_modern_each=(obj,fn)=>obj.forEach(fn);function eachProp(obj,fn,ctx){if(is.arr(obj))for(let i=0;i<obj.length;i++)fn.call(ctx,obj[i],`${i}`);else for(const key in obj)obj.hasOwnProperty(key)&&fn.call(ctx,obj[key],key)}var toArray=a=>is.und(a)?[]:is.arr(a)?a:[a];function flush(queue,iterator){if(queue.size){const items=Array.from(queue);queue.clear(),react_spring_shared_modern_each(items,iterator)}}var createStringInterpolator,to,flushCalls=(queue,...args)=>flush(queue,fn=>fn(...args)),isSSR=()=>"undefined"==typeof window||!window.navigator||/ServerSideRendering|^Deno\//.test(window.navigator.userAgent),colors=null,skipAnimation=!1,willAdvance=noop,react_spring_shared_modern_assign=globals=>{globals.to&&(to=globals.to),globals.now&&(raf.now=globals.now),void 0!==globals.colors&&(colors=globals.colors),null!=globals.skipAnimation&&(skipAnimation=globals.skipAnimation),globals.createStringInterpolator&&(createStringInterpolator=globals.createStringInterpolator),globals.requestAnimationFrame&&raf.use(globals.requestAnimationFrame),globals.batchedUpdates&&(raf.batchedUpdates=globals.batchedUpdates),globals.willAdvance&&(willAdvance=globals.willAdvance),globals.frameLoop&&(raf.frameLoop=globals.frameLoop)},startQueue=new Set,currentFrame=[],prevFrame=[],priority=0,frameLoop={get idle(){return!startQueue.size&&!currentFrame.length},start(animation){priority>animation.priority?(startQueue.add(animation),raf.onStart(flushStartQueue)):(startSafely(animation),raf(advance))},advance,sort(animation){if(priority)raf.onFrame(()=>frameLoop.sort(animation));else{const prevIndex=currentFrame.indexOf(animation);~prevIndex&&(currentFrame.splice(prevIndex,1),startUnsafely(animation))}},clear(){currentFrame=[],startQueue.clear()}};function flushStartQueue(){startQueue.forEach(startSafely),startQueue.clear(),raf(advance)}function startSafely(animation){currentFrame.includes(animation)||startUnsafely(animation)}function startUnsafely(animation){currentFrame.splice(function findIndex(arr,test){const index=arr.findIndex(test);return index<0?arr.length:index}(currentFrame,other=>other.priority>animation.priority),0,animation)}function advance(dt){const nextFrame=prevFrame;for(let i=0;i<currentFrame.length;i++){const animation=currentFrame[i];priority=animation.priority,animation.idle||(willAdvance(animation),animation.advance(dt),animation.idle||nextFrame.push(animation))}return priority=0,(prevFrame=currentFrame).length=0,(currentFrame=nextFrame).length>0}var NUMBER="[-+]?\\d*\\.?\\d+",PERCENTAGE=NUMBER+"%";function call(...parts){return"\\(\\s*("+parts.join(")\\s*,\\s*(")+")\\s*\\)"}var rgb=new RegExp("rgb"+call(NUMBER,NUMBER,NUMBER)),rgba=new RegExp("rgba"+call(NUMBER,NUMBER,NUMBER,NUMBER)),hsl=new RegExp("hsl"+call(NUMBER,PERCENTAGE,PERCENTAGE)),hsla=new RegExp("hsla"+call(NUMBER,PERCENTAGE,PERCENTAGE,NUMBER)),hex3=/^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex4=/^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6=/^#([0-9a-fA-F]{6})$/,hex8=/^#([0-9a-fA-F]{8})$/;function hue2rgb(p,q,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?p+6*(q-p)*t:t<.5?q:t<2/3?p+(q-p)*(2/3-t)*6:p}function hslToRgb(h,s,l){const q=l<.5?l*(1+s):l+s-l*s,p=2*l-q,r=hue2rgb(p,q,h+1/3),g=hue2rgb(p,q,h),b=hue2rgb(p,q,h-1/3);return Math.round(255*r)<<24|Math.round(255*g)<<16|Math.round(255*b)<<8}function parse255(str){const int=parseInt(str,10);return int<0?0:int>255?255:int}function parse360(str){return(parseFloat(str)%360+360)%360/360}function parse1(str){const num=parseFloat(str);return num<0?0:num>1?255:Math.round(255*num)}function parsePercentage(str){const int=parseFloat(str);return int<0?0:int>100?1:int/100}function colorToRgba(input){let int32Color=function normalizeColor(color){let match;return"number"==typeof color?color>>>0===color&&color>=0&&color<=4294967295?color:null:(match=hex6.exec(color))?parseInt(match[1]+"ff",16)>>>0:colors&&void 0!==colors[color]?colors[color]:(match=rgb.exec(color))?(parse255(match[1])<<24|parse255(match[2])<<16|parse255(match[3])<<8|255)>>>0:(match=rgba.exec(color))?(parse255(match[1])<<24|parse255(match[2])<<16|parse255(match[3])<<8|parse1(match[4]))>>>0:(match=hex3.exec(color))?parseInt(match[1]+match[1]+match[2]+match[2]+match[3]+match[3]+"ff",16)>>>0:(match=hex8.exec(color))?parseInt(match[1],16)>>>0:(match=hex4.exec(color))?parseInt(match[1]+match[1]+match[2]+match[2]+match[3]+match[3]+match[4]+match[4],16)>>>0:(match=hsl.exec(color))?(255|hslToRgb(parse360(match[1]),parsePercentage(match[2]),parsePercentage(match[3])))>>>0:(match=hsla.exec(color))?(hslToRgb(parse360(match[1]),parsePercentage(match[2]),parsePercentage(match[3]))|parse1(match[4]))>>>0:null}(input);if(null===int32Color)return input;int32Color=int32Color||0;return`rgba(${(4278190080&int32Color)>>>24}, ${(16711680&int32Color)>>>16}, ${(65280&int32Color)>>>8}, ${(255&int32Color)/255})`}var createInterpolator=(range,output,extrapolate)=>{if(is.fun(range))return range;if(is.arr(range))return createInterpolator({range,output,extrapolate});if(is.str(range.output[0]))return createStringInterpolator(range);const config=range,outputRange=config.output,inputRange=config.range||[0,1],extrapolateLeft=config.extrapolateLeft||config.extrapolate||"extend",extrapolateRight=config.extrapolateRight||config.extrapolate||"extend",easing=config.easing||(t=>t);return input=>{const range2=function findRange(input,inputRange){for(var i=1;i<inputRange.length-1&&!(inputRange[i]>=input);++i);return i-1}(input,inputRange);return function interpolate(input,inputMin,inputMax,outputMin,outputMax,easing,extrapolateLeft,extrapolateRight,map){let result=map?map(input):input;if(result<inputMin){if("identity"===extrapolateLeft)return result;"clamp"===extrapolateLeft&&(result=inputMin)}if(result>inputMax){if("identity"===extrapolateRight)return result;"clamp"===extrapolateRight&&(result=inputMax)}if(outputMin===outputMax)return outputMin;if(inputMin===inputMax)return input<=inputMin?outputMin:outputMax;inputMin===-1/0?result=-result:inputMax===1/0?result-=inputMin:result=(result-inputMin)/(inputMax-inputMin);result=easing(result),outputMin===-1/0?result=-result:outputMax===1/0?result+=outputMin:result=result*(outputMax-outputMin)+outputMin;return result}(input,inputRange[range2],inputRange[range2+1],outputRange[range2],outputRange[range2+1],easing,extrapolateLeft,extrapolateRight,config.map)}};var c1=1.70158,c2=1.525*c1,c3=c1+1,c4=2*Math.PI/3,c5=2*Math.PI/4.5,bounceOut=x=>{const n1=7.5625,d1=2.75;return x<1/d1?n1*x*x:x<2/d1?n1*(x-=1.5/d1)*x+.75:x<2.5/d1?n1*(x-=2.25/d1)*x+.9375:n1*(x-=2.625/d1)*x+.984375},easings={linear:x=>x,easeInQuad:x=>x*x,easeOutQuad:x=>1-(1-x)*(1-x),easeInOutQuad:x=>x<.5?2*x*x:1-Math.pow(-2*x+2,2)/2,easeInCubic:x=>x*x*x,easeOutCubic:x=>1-Math.pow(1-x,3),easeInOutCubic:x=>x<.5?4*x*x*x:1-Math.pow(-2*x+2,3)/2,easeInQuart:x=>x*x*x*x,easeOutQuart:x=>1-Math.pow(1-x,4),easeInOutQuart:x=>x<.5?8*x*x*x*x:1-Math.pow(-2*x+2,4)/2,easeInQuint:x=>x*x*x*x*x,easeOutQuint:x=>1-Math.pow(1-x,5),easeInOutQuint:x=>x<.5?16*x*x*x*x*x:1-Math.pow(-2*x+2,5)/2,easeInSine:x=>1-Math.cos(x*Math.PI/2),easeOutSine:x=>Math.sin(x*Math.PI/2),easeInOutSine:x=>-(Math.cos(Math.PI*x)-1)/2,easeInExpo:x=>0===x?0:Math.pow(2,10*x-10),easeOutExpo:x=>1===x?1:1-Math.pow(2,-10*x),easeInOutExpo:x=>0===x?0:1===x?1:x<.5?Math.pow(2,20*x-10)/2:(2-Math.pow(2,-20*x+10))/2,easeInCirc:x=>1-Math.sqrt(1-Math.pow(x,2)),easeOutCirc:x=>Math.sqrt(1-Math.pow(x-1,2)),easeInOutCirc:x=>x<.5?(1-Math.sqrt(1-Math.pow(2*x,2)))/2:(Math.sqrt(1-Math.pow(-2*x+2,2))+1)/2,easeInBack:x=>c3*x*x*x-c1*x*x,easeOutBack:x=>1+c3*Math.pow(x-1,3)+c1*Math.pow(x-1,2),easeInOutBack:x=>x<.5?Math.pow(2*x,2)*(7.189819*x-c2)/2:(Math.pow(2*x-2,2)*((c2+1)*(2*x-2)+c2)+2)/2,easeInElastic:x=>0===x?0:1===x?1:-Math.pow(2,10*x-10)*Math.sin((10*x-10.75)*c4),easeOutElastic:x=>0===x?0:1===x?1:Math.pow(2,-10*x)*Math.sin((10*x-.75)*c4)+1,easeInOutElastic:x=>0===x?0:1===x?1:x<.5?-Math.pow(2,20*x-10)*Math.sin((20*x-11.125)*c5)/2:Math.pow(2,-20*x+10)*Math.sin((20*x-11.125)*c5)/2+1,easeInBounce:x=>1-bounceOut(1-x),easeOutBounce:bounceOut,easeInOutBounce:x=>x<.5?(1-bounceOut(1-2*x))/2:(1+bounceOut(2*x-1))/2,steps:(steps2,direction="end")=>progress2=>{const expanded=(progress2="end"===direction?Math.min(progress2,.999):Math.max(progress2,.001))*steps2,rounded="end"===direction?Math.floor(expanded):Math.ceil(expanded);return min=0,max=1,v=rounded/steps2,Math.min(Math.max(v,min),max);var min,max,v}},$get=Symbol.for("FluidValue.get"),$observers=Symbol.for("FluidValue.observers"),hasFluidValue=arg=>Boolean(arg&&arg[$get]),getFluidValue=arg=>arg&&arg[$get]?arg[$get]():arg,getFluidObservers=target=>target[$observers]||null;function callFluidObservers(target,event){const observers=target[$observers];observers&&observers.forEach(observer2=>{!function callFluidObserver(observer2,event){observer2.eventObserved?observer2.eventObserved(event):observer2(event)}(observer2,event)})}var FluidValue=class{constructor(get){if(!get&&!(get=this.get))throw Error("Unknown getter");setFluidGetter(this,get)}},setFluidGetter=(target,get)=>setHidden(target,$get,get);function addFluidObserver(target,observer2){if(target[$get]){let observers=target[$observers];observers||setHidden(target,$observers,observers=new Set),observers.has(observer2)||(observers.add(observer2),target.observerAdded&&target.observerAdded(observers.size,observer2))}return observer2}function removeFluidObserver(target,observer2){const observers=target[$observers];if(observers&&observers.has(observer2)){const count=observers.size-1;count?observers.delete(observer2):target[$observers]=null,target.observerRemoved&&target.observerRemoved(count,observer2)}}var namedColorRegex,setHidden=(target,key,value)=>Object.defineProperty(target,key,{value,writable:!0,configurable:!0}),numberRegex=/[+\-]?(?:0|[1-9]\d*)(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,colorRegex=/(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\((-?\d+%?[,\s]+){2,3}\s*[\d\.]+%?\))/gi,unitRegex=new RegExp(`(${numberRegex.source})(%|[a-z]+)`,"i"),rgbaRegex=/rgba\(([0-9\.-]+), ([0-9\.-]+), ([0-9\.-]+), ([0-9\.-]+)\)/gi,cssVariableRegex=/var\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\)/,variableToRgba=input=>{const[token,fallback]=parseCSSVariable(input);if(!token||isSSR())return input;const value=window.getComputedStyle(document.documentElement).getPropertyValue(token);if(value)return value.trim();if(fallback&&fallback.startsWith("--")){const value2=window.getComputedStyle(document.documentElement).getPropertyValue(fallback);return value2||input}return fallback&&cssVariableRegex.test(fallback)?variableToRgba(fallback):fallback||input},parseCSSVariable=current=>{const match=cssVariableRegex.exec(current);if(!match)return[,];const[,token,fallback]=match;return[token,fallback]},rgbaRound=(_,p1,p2,p3,p4)=>`rgba(${Math.round(p1)}, ${Math.round(p2)}, ${Math.round(p3)}, ${p4})`,createStringInterpolator2=config=>{namedColorRegex||(namedColorRegex=colors?new RegExp(`(${Object.keys(colors).join("|")})(?!\\w)`,"g"):/^\b$/);const output=config.output.map(value=>getFluidValue(value).replace(cssVariableRegex,variableToRgba).replace(colorRegex,colorToRgba).replace(namedColorRegex,colorToRgba)),keyframes=output.map(value=>value.match(numberRegex).map(Number)),interpolators=keyframes[0].map((_,i)=>keyframes.map(values=>{if(!(i in values))throw Error('The arity of each "output" value must be equal');return values[i]})).map(output2=>createInterpolator({...config,output:output2}));return input=>{const missingUnit=!unitRegex.test(output[0])&&output.find(value=>unitRegex.test(value))?.replace(numberRegex,"");let i=0;return output[0].replace(numberRegex,()=>`${interpolators[i++](input)}${missingUnit||""}`).replace(rgbaRegex,rgbaRound)}},prefix="react-spring: ",once=fn=>{const func=fn;let called=!1;if("function"!=typeof func)throw new TypeError(`${prefix}once requires a function parameter`);return(...args)=>{called||(func(...args),called=!0)}},warnInterpolate=once(console.warn);var warnDirectCall=once(console.warn);function isAnimatedString(value){return is.str(value)&&("#"==value[0]||/\d/.test(value)||!isSSR()&&cssVariableRegex.test(value)||value in(colors||{}))}var react_spring_shared_modern_useIsomorphicLayoutEffect=isSSR()?react.useEffect:react.useLayoutEffect,useIsMounted=()=>{const isMounted=(0,react.useRef)(!1);return react_spring_shared_modern_useIsomorphicLayoutEffect(()=>(isMounted.current=!0,()=>{isMounted.current=!1}),[]),isMounted};function react_spring_shared_modern_useForceUpdate(){const update=(0,react.useState)()[1],isMounted=useIsMounted();return()=>{isMounted.current&&update(Math.random())}}var react_spring_shared_modern_useOnce=effect=>(0,react.useEffect)(effect,emptyDeps),emptyDeps=[];var $node=Symbol.for("Animated:node"),getAnimated=owner=>owner&&owner[$node],setAnimated=(owner,node)=>{return obj=owner,key=$node,value=node,Object.defineProperty(obj,key,{value,writable:!0,configurable:!0});var obj,key,value},getPayload=owner=>owner&&owner[$node]&&owner[$node].getPayload(),Animated=class{constructor(){setAnimated(this,this)}getPayload(){return this.payload||[]}},AnimatedValue=class extends Animated{constructor(_value){super(),this._value=_value,this.done=!0,this.durationProgress=0,is.num(this._value)&&(this.lastPosition=this._value)}static create(value){return new AnimatedValue(value)}getPayload(){return[this]}getValue(){return this._value}setValue(value,step){return is.num(value)&&(this.lastPosition=value,step&&(value=Math.round(value/step)*step,this.done&&(this.lastPosition=value))),this._value!==value&&(this._value=value,!0)}reset(){const{done}=this;this.done=!1,is.num(this._value)&&(this.elapsedTime=0,this.durationProgress=0,this.lastPosition=this._value,done&&(this.lastVelocity=null),this.v0=null)}},AnimatedString=class extends AnimatedValue{constructor(value){super(0),this._string=null,this._toString=createInterpolator({output:[value,value]})}static create(value){return new AnimatedString(value)}getValue(){const value=this._string;return null==value?this._string=this._toString(this._value):value}setValue(value){if(is.str(value)){if(value==this._string)return!1;this._string=value,this._value=1}else{if(!super.setValue(value))return!1;this._string=null}return!0}reset(goal){goal&&(this._toString=createInterpolator({output:[this.getValue(),goal]})),this._value=0,super.reset()}},TreeContext={dependencies:null},AnimatedObject=class extends Animated{constructor(source){super(),this.source=source,this.setValue(source)}getValue(animated){const values={};return eachProp(this.source,(source,key)=>{var value;(value=source)&&value[$node]===value?values[key]=source.getValue(animated):hasFluidValue(source)?values[key]=getFluidValue(source):animated||(values[key]=source)}),values}setValue(source){this.source=source,this.payload=this._makePayload(source)}reset(){this.payload&&react_spring_shared_modern_each(this.payload,node=>node.reset())}_makePayload(source){if(source){const payload=new Set;return eachProp(source,this._addToPayload,payload),Array.from(payload)}}_addToPayload(source){TreeContext.dependencies&&hasFluidValue(source)&&TreeContext.dependencies.add(source);const payload=getPayload(source);payload&&react_spring_shared_modern_each(payload,node=>this.add(node))}},AnimatedArray=class extends AnimatedObject{constructor(source){super(source)}static create(source){return new AnimatedArray(source)}getValue(){return this.source.map(node=>node.getValue())}setValue(source){const payload=this.getPayload();return source.length==payload.length?payload.map((node,i)=>node.setValue(source[i])).some(Boolean):(super.setValue(source.map(makeAnimated)),!0)}};function makeAnimated(value){return(isAnimatedString(value)?AnimatedString:AnimatedValue).create(value)}function getAnimatedType(value){const parentNode=getAnimated(value);return parentNode?parentNode.constructor:is.arr(value)?AnimatedArray:isAnimatedString(value)?AnimatedString:AnimatedValue}var withAnimated=(Component,host)=>{const hasInstance=!is.fun(Component)||Component.prototype&&Component.prototype.isReactComponent;return(0,react.forwardRef)((givenProps,givenRef)=>{const instanceRef=(0,react.useRef)(null),ref=hasInstance&&(0,react.useCallback)(value=>{instanceRef.current=function updateRef(ref,value){ref&&(is.fun(ref)?ref(value):ref.current=value);return value}(givenRef,value)},[givenRef]),[props,deps]=function getAnimatedState(props,host){const dependencies=new Set;TreeContext.dependencies=dependencies,props.style&&(props={...props,style:host.createAnimatedStyle(props.style)});return props=new AnimatedObject(props),TreeContext.dependencies=null,[props,dependencies]}(givenProps,host),forceUpdate=react_spring_shared_modern_useForceUpdate(),callback=()=>{const instance=instanceRef.current;if(hasInstance&&!instance)return;!1===(!!instance&&host.applyAnimatedValues(instance,props.getValue(!0)))&&forceUpdate()},observer=new PropsObserver(callback,deps),observerRef=(0,react.useRef)();react_spring_shared_modern_useIsomorphicLayoutEffect(()=>(observerRef.current=observer,react_spring_shared_modern_each(deps,dep=>addFluidObserver(dep,observer)),()=>{observerRef.current&&(react_spring_shared_modern_each(observerRef.current.deps,dep=>removeFluidObserver(dep,observerRef.current)),raf.cancel(observerRef.current.update))})),(0,react.useEffect)(callback,[]),react_spring_shared_modern_useOnce(()=>()=>{const observer2=observerRef.current;react_spring_shared_modern_each(observer2.deps,dep=>removeFluidObserver(dep,observer2))});const usedProps=host.getComponentProps(props.getValue());return react.createElement(Component,{...usedProps,ref})})},PropsObserver=class{constructor(update,deps){this.update=update,this.deps=deps}eventObserved(event){"change"==event.type&&raf.write(this.update)}};var cacheKey=Symbol.for("AnimatedComponent"),getDisplayName=arg=>is.str(arg)?arg:arg&&is.str(arg.displayName)?arg.displayName:is.fun(arg)&&arg.name||null;function callProp(value,...args){return is.fun(value)?value(...args):value}var matchProp=(value,key)=>!0===value||!!(key&&value&&(is.fun(value)?value(key):toArray(value).includes(key))),resolveProp=(prop,key)=>is.obj(prop)?key&&prop[key]:prop,getDefaultProp=(props,key)=>!0===props.default?props[key]:props.default?props.default[key]:void 0,noopTransform=value=>value,getDefaultProps=(props,transform=noopTransform)=>{let keys=DEFAULT_PROPS;props.default&&!0!==props.default&&(props=props.default,keys=Object.keys(props));const defaults2={};for(const key of keys){const value=transform(props[key],key);is.und(value)||(defaults2[key]=value)}return defaults2},DEFAULT_PROPS=["config","onProps","onStart","onChange","onPause","onResume","onRest"],RESERVED_PROPS={config:1,from:1,to:1,ref:1,loop:1,reset:1,pause:1,cancel:1,reverse:1,immediate:1,default:1,delay:1,onProps:1,onStart:1,onChange:1,onPause:1,onResume:1,onRest:1,onResolve:1,items:1,trail:1,sort:1,expires:1,initial:1,enter:1,update:1,leave:1,children:1,onDestroyed:1,keys:1,callId:1,parentId:1};function inferTo(props){const to2=function getForwardProps(props){const forward={};let count=0;if(eachProp(props,(value,prop)=>{RESERVED_PROPS[prop]||(forward[prop]=value,count++)}),count)return forward}(props);if(to2){const out={to:to2};return eachProp(props,(val,key)=>key in to2||(out[key]=val)),out}return{...props}}function computeGoal(value){return value=getFluidValue(value),is.arr(value)?value.map(computeGoal):isAnimatedString(value)?globals_exports.createStringInterpolator({range:[0,1],output:[value,value]})(1):value}function hasProps(props){for(const _ in props)return!0;return!1}function isAsyncTo(to2){return is.fun(to2)||is.arr(to2)&&is.obj(to2[0])}function detachRefs(ctrl,ref){ctrl.ref?.delete(ctrl),ref?.delete(ctrl)}function replaceRef(ctrl,ref){ref&&ctrl.ref!==ref&&(ctrl.ref?.delete(ctrl),ref.add(ctrl),ctrl.ref=ref)}var defaults={tension:170,friction:26,mass:1,damping:1,easing:easings.linear,clamp:!1},AnimationConfig=class{constructor(){this.velocity=0,Object.assign(this,defaults)}};function sanitizeConfig(config2,props){if(is.und(props.decay)){const isTensionConfig=!is.und(props.tension)||!is.und(props.friction);!isTensionConfig&&is.und(props.frequency)&&is.und(props.damping)&&is.und(props.mass)||(config2.duration=void 0,config2.decay=void 0),isTensionConfig&&(config2.frequency=void 0)}else config2.duration=void 0}var emptyArray=[],Animation=class{constructor(){this.changed=!1,this.values=emptyArray,this.toValues=null,this.fromValues=emptyArray,this.config=new AnimationConfig,this.immediate=!1}};function scheduleProps(callId,{key,props,defaultProps,state,actions}){return new Promise((resolve,reject)=>{let delay,timeout,cancel=matchProp(props.cancel??defaultProps?.cancel,key);if(cancel)onStart();else{is.und(props.pause)||(state.paused=matchProp(props.pause,key));let pause=defaultProps?.pause;!0!==pause&&(pause=state.paused||matchProp(pause,key)),delay=callProp(props.delay||0,key),pause?(state.resumeQueue.add(onResume),actions.pause()):(actions.resume(),onResume())}function onPause(){state.resumeQueue.add(onResume),state.timeouts.delete(timeout),timeout.cancel(),delay=timeout.time-raf.now()}function onResume(){delay>0&&!globals_exports.skipAnimation?(state.delayed=!0,timeout=raf.setTimeout(onStart,delay),state.pauseQueue.add(onPause),state.timeouts.add(timeout)):onStart()}function onStart(){state.delayed&&(state.delayed=!1),state.pauseQueue.delete(onPause),state.timeouts.delete(timeout),callId<=(state.cancelId||0)&&(cancel=!0);try{actions.start({...props,callId,cancel},resolve)}catch(err){reject(err)}}})}var getCombinedResult=(target,results)=>1==results.length?results[0]:results.some(result=>result.cancelled)?getCancelledResult(target.get()):results.every(result=>result.noop)?getNoopResult(target.get()):getFinishedResult(target.get(),results.every(result=>result.finished)),getNoopResult=value=>({value,noop:!0,finished:!0,cancelled:!1}),getFinishedResult=(value,finished,cancelled=!1)=>({value,finished,cancelled}),getCancelledResult=value=>({value,cancelled:!0,finished:!1});function runAsync(to2,props,state,target){const{callId,parentId,onRest}=props,{asyncTo:prevTo,promise:prevPromise}=state;return parentId||to2!==prevTo||props.reset?state.promise=(async()=>{state.asyncId=callId,state.asyncTo=to2;const defaultProps=getDefaultProps(props,(value,key)=>"onRest"===key?void 0:value);let preventBail,bail;const bailPromise=new Promise((resolve,reject)=>(preventBail=resolve,bail=reject)),bailIfEnded=bailSignal=>{const bailResult=callId<=(state.cancelId||0)&&getCancelledResult(target)||callId!==state.asyncId&&getFinishedResult(target,!1);if(bailResult)throw bailSignal.result=bailResult,bail(bailSignal),bailSignal},animate=(arg1,arg2)=>{const bailSignal=new BailSignal,skipAnimationSignal=new SkipAnimationSignal;return(async()=>{if(globals_exports.skipAnimation)throw stopAsync(state),skipAnimationSignal.result=getFinishedResult(target,!1),bail(skipAnimationSignal),skipAnimationSignal;bailIfEnded(bailSignal);const props2=is.obj(arg1)?{...arg1}:{...arg2,to:arg1};props2.parentId=callId,eachProp(defaultProps,(value,key)=>{is.und(props2[key])&&(props2[key]=value)});const result2=await target.start(props2);return bailIfEnded(bailSignal),state.paused&&await new Promise(resume=>{state.resumeQueue.add(resume)}),result2})()};let result;if(globals_exports.skipAnimation)return stopAsync(state),getFinishedResult(target,!1);try{let animating;animating=is.arr(to2)?(async queue=>{for(const props2 of queue)await animate(props2)})(to2):Promise.resolve(to2(animate,target.stop.bind(target))),await Promise.all([animating.then(preventBail),bailPromise]),result=getFinishedResult(target.get(),!0,!1)}catch(err){if(err instanceof BailSignal)result=err.result;else{if(!(err instanceof SkipAnimationSignal))throw err;result=err.result}}finally{callId==state.asyncId&&(state.asyncId=parentId,state.asyncTo=parentId?prevTo:void 0,state.promise=parentId?prevPromise:void 0)}return is.fun(onRest)&&raf.batchedUpdates(()=>{onRest(result,target,target.item)}),result})():prevPromise}function stopAsync(state,cancelId){flush(state.timeouts,t=>t.cancel()),state.pauseQueue.clear(),state.resumeQueue.clear(),state.asyncId=state.asyncTo=state.promise=void 0,cancelId&&(state.cancelId=cancelId)}var BailSignal=class extends Error{constructor(){super("An async animation has been interrupted. You see this error because you forgot to use `await` or `.catch(...)` on its returned promise.")}},SkipAnimationSignal=class extends Error{constructor(){super("SkipAnimationSignal")}},isFrameValue=value=>value instanceof FrameValue,nextId=1,FrameValue=class extends FluidValue{constructor(){super(...arguments),this.id=nextId++,this._priority=0}get priority(){return this._priority}set priority(priority){this._priority!=priority&&(this._priority=priority,this._onPriorityChange(priority))}get(){const node=getAnimated(this);return node&&node.getValue()}to(...args){return globals_exports.to(this,args)}interpolate(...args){return function deprecateInterpolate(){warnInterpolate(`${prefix}The "interpolate" function is deprecated in v9 (use "to" instead)`)}(),globals_exports.to(this,args)}toJSON(){return this.get()}observerAdded(count){1==count&&this._attach()}observerRemoved(count){0==count&&this._detach()}_attach(){}_detach(){}_onChange(value,idle=!1){callFluidObservers(this,{type:"change",parent:this,value,idle})}_onPriorityChange(priority){this.idle||frameLoop.sort(this),callFluidObservers(this,{type:"priority",parent:this,priority})}},$P=Symbol.for("SpringPhase"),hasAnimated=target=>(1&target[$P])>0,isAnimating=target=>(2&target[$P])>0,isPaused=target=>(4&target[$P])>0,setActiveBit=(target,active)=>active?target[$P]|=3:target[$P]&=-3,setPausedBit=(target,paused)=>paused?target[$P]|=4:target[$P]&=-5,SpringValue=class extends FrameValue{constructor(arg1,arg2){if(super(),this.animation=new Animation,this.defaultProps={},this._state={paused:!1,delayed:!1,pauseQueue:new Set,resumeQueue:new Set,timeouts:new Set},this._pendingCalls=new Set,this._lastCallId=0,this._lastToId=0,this._memoizedDuration=0,!is.und(arg1)||!is.und(arg2)){const props=is.obj(arg1)?{...arg1}:{...arg2,from:arg1};is.und(props.default)&&(props.default=!0),this.start(props)}}get idle(){return!(isAnimating(this)||this._state.asyncTo)||isPaused(this)}get goal(){return getFluidValue(this.animation.to)}get velocity(){const node=getAnimated(this);return node instanceof AnimatedValue?node.lastVelocity||0:node.getPayload().map(node2=>node2.lastVelocity||0)}get hasAnimated(){return hasAnimated(this)}get isAnimating(){return isAnimating(this)}get isPaused(){return isPaused(this)}get isDelayed(){return this._state.delayed}advance(dt){let idle=!0,changed=!1;const anim=this.animation;let{toValues}=anim;const{config:config2}=anim,payload=getPayload(anim.to);!payload&&hasFluidValue(anim.to)&&(toValues=toArray(getFluidValue(anim.to))),anim.values.forEach((node2,i)=>{if(node2.done)return;const to2=node2.constructor==AnimatedString?1:payload?payload[i].lastPosition:toValues[i];let finished=anim.immediate,position=to2;if(!finished){if(position=node2.lastPosition,config2.tension<=0)return void(node2.done=!0);let elapsed=node2.elapsedTime+=dt;const from=anim.fromValues[i],v0=null!=node2.v0?node2.v0:node2.v0=is.arr(config2.velocity)?config2.velocity[i]:config2.velocity;let velocity;const precision=config2.precision||(from==to2?.005:Math.min(1,.001*Math.abs(to2-from)));if(is.und(config2.duration))if(config2.decay){const decay=!0===config2.decay?.998:config2.decay,e=Math.exp(-(1-decay)*elapsed);position=from+v0/(1-decay)*(1-e),finished=Math.abs(node2.lastPosition-position)<=precision,velocity=v0*e}else{velocity=null==node2.lastVelocity?v0:node2.lastVelocity;const restVelocity=config2.restVelocity||precision/10,bounceFactor=config2.clamp?0:config2.bounce,canBounce=!is.und(bounceFactor),isGrowing=from==to2?node2.v0>0:from<to2;let isMoving,isBouncing=!1;const step=1,numSteps=Math.ceil(dt/step);for(let n=0;n<numSteps&&(isMoving=Math.abs(velocity)>restVelocity,isMoving||(finished=Math.abs(to2-position)<=precision,!finished));++n){canBounce&&(isBouncing=position==to2||position>to2==isGrowing,isBouncing&&(velocity=-velocity*bounceFactor,position=to2));velocity+=(1e-6*-config2.tension*(position-to2)+.001*-config2.friction*velocity)/config2.mass*step,position+=velocity*step}}else{let p=1;config2.duration>0&&(this._memoizedDuration!==config2.duration&&(this._memoizedDuration=config2.duration,node2.durationProgress>0&&(node2.elapsedTime=config2.duration*node2.durationProgress,elapsed=node2.elapsedTime+=dt)),p=(config2.progress||0)+elapsed/this._memoizedDuration,p=p>1?1:p<0?0:p,node2.durationProgress=p),position=from+config2.easing(p)*(to2-from),velocity=(position-node2.lastPosition)/dt,finished=1==p}node2.lastVelocity=velocity,Number.isNaN(position)&&(console.warn("Got NaN while animating:",this),finished=!0)}payload&&!payload[i].done&&(finished=!1),finished?node2.done=!0:idle=!1,node2.setValue(position,config2.round)&&(changed=!0)});const node=getAnimated(this),currVal=node.getValue();if(idle){const finalVal=getFluidValue(anim.to);currVal===finalVal&&!changed||config2.decay?changed&&config2.decay&&this._onChange(currVal):(node.setValue(finalVal),this._onChange(finalVal)),this._stop()}else changed&&this._onChange(currVal)}set(value){return raf.batchedUpdates(()=>{this._stop(),this._focus(value),this._set(value)}),this}pause(){this._update({pause:!0})}resume(){this._update({pause:!1})}finish(){if(isAnimating(this)){const{to:to2,config:config2}=this.animation;raf.batchedUpdates(()=>{this._onStart(),config2.decay||this._set(to2,!1),this._stop()})}return this}update(props){return(this.queue||(this.queue=[])).push(props),this}start(to2,arg2){let queue;return is.und(to2)?(queue=this.queue||[],this.queue=[]):queue=[is.obj(to2)?to2:{...arg2,to:to2}],Promise.all(queue.map(props=>this._update(props))).then(results=>getCombinedResult(this,results))}stop(cancel){const{to:to2}=this.animation;return this._focus(this.get()),stopAsync(this._state,cancel&&this._lastCallId),raf.batchedUpdates(()=>this._stop(to2,cancel)),this}reset(){this._update({reset:!0})}eventObserved(event){"change"==event.type?this._start():"priority"==event.type&&(this.priority=event.priority+1)}_prepareNode(props){const key=this.key||"";let{to:to2,from}=props;to2=is.obj(to2)?to2[key]:to2,(null==to2||isAsyncTo(to2))&&(to2=void 0),from=is.obj(from)?from[key]:from,null==from&&(from=void 0);const range={to:to2,from};return hasAnimated(this)||(props.reverse&&([to2,from]=[from,to2]),from=getFluidValue(from),is.und(from)?getAnimated(this)||this._set(to2):this._set(from)),range}_update({...props},isLoop){const{key,defaultProps}=this;props.default&&Object.assign(defaultProps,getDefaultProps(props,(value,prop)=>/^on/.test(prop)?resolveProp(value,key):value)),mergeActiveFn(this,props,"onProps"),sendEvent(this,"onProps",props,this);const range=this._prepareNode(props);if(Object.isFrozen(this))throw Error("Cannot animate a `SpringValue` object that is frozen. Did you forget to pass your component to `animated(...)` before animating its props?");const state=this._state;return scheduleProps(++this._lastCallId,{key,props,defaultProps,state,actions:{pause:()=>{isPaused(this)||(setPausedBit(this,!0),flushCalls(state.pauseQueue),sendEvent(this,"onPause",getFinishedResult(this,checkFinished(this,this.animation.to)),this))},resume:()=>{isPaused(this)&&(setPausedBit(this,!1),isAnimating(this)&&this._resume(),flushCalls(state.resumeQueue),sendEvent(this,"onResume",getFinishedResult(this,checkFinished(this,this.animation.to)),this))},start:this._merge.bind(this,range)}}).then(result=>{if(props.loop&&result.finished&&(!isLoop||!result.noop)){const nextProps=createLoopUpdate(props);if(nextProps)return this._update(nextProps,!0)}return result})}_merge(range,props,resolve){if(props.cancel)return this.stop(!0),resolve(getCancelledResult(this));const hasToProp=!is.und(range.to),hasFromProp=!is.und(range.from);if(hasToProp||hasFromProp){if(!(props.callId>this._lastToId))return resolve(getCancelledResult(this));this._lastToId=props.callId}const{key,defaultProps,animation:anim}=this,{to:prevTo,from:prevFrom}=anim;let{to:to2=prevTo,from=prevFrom}=range;!hasFromProp||hasToProp||props.default&&!is.und(to2)||(to2=from),props.reverse&&([to2,from]=[from,to2]);const hasFromChanged=!isEqual(from,prevFrom);hasFromChanged&&(anim.from=from),from=getFluidValue(from);const hasToChanged=!isEqual(to2,prevTo);hasToChanged&&this._focus(to2);const hasAsyncTo=isAsyncTo(props.to),{config:config2}=anim,{decay,velocity}=config2;(hasToProp||hasFromProp)&&(config2.velocity=0),props.config&&!hasAsyncTo&&function mergeConfig(config2,newConfig,defaultConfig){defaultConfig&&(sanitizeConfig(defaultConfig={...defaultConfig},newConfig),newConfig={...defaultConfig,...newConfig}),sanitizeConfig(config2,newConfig),Object.assign(config2,newConfig);for(const key in defaults)null==config2[key]&&(config2[key]=defaults[key]);let{frequency,damping}=config2;const{mass}=config2;return is.und(frequency)||(frequency<.01&&(frequency=.01),damping<0&&(damping=0),config2.tension=Math.pow(2*Math.PI/frequency,2)*mass,config2.friction=4*Math.PI*damping*mass/frequency),config2}(config2,callProp(props.config,key),props.config!==defaultProps.config?callProp(defaultProps.config,key):void 0);let node=getAnimated(this);if(!node||is.und(to2))return resolve(getFinishedResult(this,!0));const reset=is.und(props.reset)?hasFromProp&&!props.default:!is.und(from)&&matchProp(props.reset,key),value=reset?from:this.get(),goal=computeGoal(to2),isAnimatable=is.num(goal)||is.arr(goal)||isAnimatedString(goal),immediate=!hasAsyncTo&&(!isAnimatable||matchProp(defaultProps.immediate||props.immediate,key));if(hasToChanged){const nodeType=getAnimatedType(to2);if(nodeType!==node.constructor){if(!immediate)throw Error(`Cannot animate between ${node.constructor.name} and ${nodeType.name}, as the "to" prop suggests`);node=this._set(goal)}}const goalType=node.constructor;let started=hasFluidValue(to2),finished=!1;if(!started){const hasValueChanged=reset||!hasAnimated(this)&&hasFromChanged;(hasToChanged||hasValueChanged)&&(finished=isEqual(computeGoal(value),goal),started=!finished),(isEqual(anim.immediate,immediate)||immediate)&&isEqual(config2.decay,decay)&&isEqual(config2.velocity,velocity)||(started=!0)}if(finished&&isAnimating(this)&&(anim.changed&&!reset?started=!0:started||this._stop(prevTo)),!hasAsyncTo&&((started||hasFluidValue(prevTo))&&(anim.values=node.getPayload(),anim.toValues=hasFluidValue(to2)?null:goalType==AnimatedString?[1]:toArray(goal)),anim.immediate!=immediate&&(anim.immediate=immediate,immediate||reset||this._set(prevTo)),started)){const{onRest}=anim;react_spring_shared_modern_each(ACTIVE_EVENTS,type=>mergeActiveFn(this,props,type));const result=getFinishedResult(this,checkFinished(this,prevTo));flushCalls(this._pendingCalls,result),this._pendingCalls.add(resolve),anim.changed&&raf.batchedUpdates(()=>{anim.changed=!reset,onRest?.(result,this),reset?callProp(defaultProps.onRest,result):anim.onStart?.(result,this)})}reset&&this._set(value),hasAsyncTo?resolve(runAsync(props.to,props,this._state,this)):started?this._start():isAnimating(this)&&!hasToChanged?this._pendingCalls.add(resolve):resolve(getNoopResult(value))}_focus(value){const anim=this.animation;value!==anim.to&&(getFluidObservers(this)&&this._detach(),anim.to=value,getFluidObservers(this)&&this._attach())}_attach(){let priority=0;const{to:to2}=this.animation;hasFluidValue(to2)&&(addFluidObserver(to2,this),isFrameValue(to2)&&(priority=to2.priority+1)),this.priority=priority}_detach(){const{to:to2}=this.animation;hasFluidValue(to2)&&removeFluidObserver(to2,this)}_set(arg,idle=!0){const value=getFluidValue(arg);if(!is.und(value)){const oldNode=getAnimated(this);if(!oldNode||!isEqual(value,oldNode.getValue())){const nodeType=getAnimatedType(value);oldNode&&oldNode.constructor==nodeType?oldNode.setValue(value):setAnimated(this,nodeType.create(value)),oldNode&&raf.batchedUpdates(()=>{this._onChange(value,idle)})}}return getAnimated(this)}_onStart(){const anim=this.animation;anim.changed||(anim.changed=!0,sendEvent(this,"onStart",getFinishedResult(this,checkFinished(this,anim.to)),this))}_onChange(value,idle){idle||(this._onStart(),callProp(this.animation.onChange,value,this)),callProp(this.defaultProps.onChange,value,this),super._onChange(value,idle)}_start(){const anim=this.animation;getAnimated(this).reset(getFluidValue(anim.to)),anim.immediate||(anim.fromValues=anim.values.map(node=>node.lastPosition)),isAnimating(this)||(setActiveBit(this,!0),isPaused(this)||this._resume())}_resume(){globals_exports.skipAnimation?this.finish():frameLoop.start(this)}_stop(goal,cancel){if(isAnimating(this)){setActiveBit(this,!1);const anim=this.animation;react_spring_shared_modern_each(anim.values,node=>{node.done=!0}),anim.toValues&&(anim.onChange=anim.onPause=anim.onResume=void 0),callFluidObservers(this,{type:"idle",parent:this});const result=cancel?getCancelledResult(this.get()):getFinishedResult(this.get(),checkFinished(this,goal??anim.to));flushCalls(this._pendingCalls,result),anim.changed&&(anim.changed=!1,sendEvent(this,"onRest",result,this))}}};function checkFinished(target,to2){const goal=computeGoal(to2);return isEqual(computeGoal(target.get()),goal)}function createLoopUpdate(props,loop=props.loop,to2=props.to){const loopRet=callProp(loop);if(loopRet){const overrides=!0!==loopRet&&inferTo(loopRet),reverse=(overrides||props).reverse,reset=!overrides||overrides.reset;return createUpdate({...props,loop,default:!1,pause:void 0,to:!reverse||isAsyncTo(to2)?to2:void 0,from:reset?props.from:void 0,reset,...overrides})}}function createUpdate(props){const{to:to2,from}=props=inferTo(props),keys=new Set;return is.obj(to2)&&findDefined(to2,keys),is.obj(from)&&findDefined(from,keys),props.keys=keys.size?Array.from(keys):null,props}function findDefined(values,keys){eachProp(values,(value,key)=>null!=value&&keys.add(key))}var ACTIVE_EVENTS=["onStart","onRest","onChange","onPause","onResume"];function mergeActiveFn(target,props,type){target.animation[type]=props[type]!==getDefaultProp(props,type)?resolveProp(props[type],target.key):void 0}function sendEvent(target,type,...args){target.animation[type]?.(...args),target.defaultProps[type]?.(...args)}var BATCHED_EVENTS=["onStart","onChange","onRest"],nextId2=1,Controller=class{constructor(props,flush3){this.id=nextId2++,this.springs={},this.queue=[],this._lastAsyncId=0,this._active=new Set,this._changed=new Set,this._started=!1,this._state={paused:!1,pauseQueue:new Set,resumeQueue:new Set,timeouts:new Set},this._events={onStart:new Map,onChange:new Map,onRest:new Map},this._onFrame=this._onFrame.bind(this),flush3&&(this._flush=flush3),props&&this.start({default:!0,...props})}get idle(){return!this._state.asyncTo&&Object.values(this.springs).every(spring=>spring.idle&&!spring.isDelayed&&!spring.isPaused)}get item(){return this._item}set item(item){this._item=item}get(){const values={};return this.each((spring,key)=>values[key]=spring.get()),values}set(values){for(const key in values){const value=values[key];is.und(value)||this.springs[key].set(value)}}update(props){return props&&this.queue.push(createUpdate(props)),this}start(props){let{queue}=this;return props?queue=toArray(props).map(createUpdate):this.queue=[],this._flush?this._flush(this,queue):(prepareKeys(this,queue),flushUpdateQueue(this,queue))}stop(arg,keys){if(arg!==!!arg&&(keys=arg),keys){const springs=this.springs;react_spring_shared_modern_each(toArray(keys),key=>springs[key].stop(!!arg))}else stopAsync(this._state,this._lastAsyncId),this.each(spring=>spring.stop(!!arg));return this}pause(keys){if(is.und(keys))this.start({pause:!0});else{const springs=this.springs;react_spring_shared_modern_each(toArray(keys),key=>springs[key].pause())}return this}resume(keys){if(is.und(keys))this.start({pause:!1});else{const springs=this.springs;react_spring_shared_modern_each(toArray(keys),key=>springs[key].resume())}return this}each(iterator){eachProp(this.springs,iterator)}_onFrame(){const{onStart,onChange,onRest}=this._events,active=this._active.size>0,changed=this._changed.size>0;(active&&!this._started||changed&&!this._started)&&(this._started=!0,flush(onStart,([onStart2,result])=>{result.value=this.get(),onStart2(result,this,this._item)}));const idle=!active&&this._started,values=changed||idle&&onRest.size?this.get():null;changed&&onChange.size&&flush(onChange,([onChange2,result])=>{result.value=values,onChange2(result,this,this._item)}),idle&&(this._started=!1,flush(onRest,([onRest2,result])=>{result.value=values,onRest2(result,this,this._item)}))}eventObserved(event){if("change"==event.type)this._changed.add(event.parent),event.idle||this._active.add(event.parent);else{if("idle"!=event.type)return;this._active.delete(event.parent)}raf.onFrame(this._onFrame)}};function flushUpdateQueue(ctrl,queue){return Promise.all(queue.map(props=>flushUpdate(ctrl,props))).then(results=>getCombinedResult(ctrl,results))}async function flushUpdate(ctrl,props,isLoop){const{keys,to:to2,from,loop,onRest,onResolve}=props,defaults2=is.obj(props.default)&&props.default;loop&&(props.loop=!1),!1===to2&&(props.to=null),!1===from&&(props.from=null);const asyncTo=is.arr(to2)||is.fun(to2)?to2:void 0;asyncTo?(props.to=void 0,props.onRest=void 0,defaults2&&(defaults2.onRest=void 0)):react_spring_shared_modern_each(BATCHED_EVENTS,key=>{const handler=props[key];if(is.fun(handler)){const queue=ctrl._events[key];props[key]=({finished,cancelled})=>{const result2=queue.get(handler);result2?(finished||(result2.finished=!1),cancelled&&(result2.cancelled=!0)):queue.set(handler,{value:null,finished:finished||!1,cancelled:cancelled||!1})},defaults2&&(defaults2[key]=props[key])}});const state=ctrl._state;props.pause===!state.paused?(state.paused=props.pause,flushCalls(props.pause?state.pauseQueue:state.resumeQueue)):state.paused&&(props.pause=!0);const promises=(keys||Object.keys(ctrl.springs)).map(key=>ctrl.springs[key].start(props)),cancel=!0===props.cancel||!0===getDefaultProp(props,"cancel");(asyncTo||cancel&&state.asyncId)&&promises.push(scheduleProps(++ctrl._lastAsyncId,{props,state,actions:{pause:noop,resume:noop,start(props2,resolve){cancel?(stopAsync(state,ctrl._lastAsyncId),resolve(getCancelledResult(ctrl))):(props2.onRest=onRest,resolve(runAsync(asyncTo,props2,state,ctrl)))}}})),state.paused&&await new Promise(resume=>{state.resumeQueue.add(resume)});const result=getCombinedResult(ctrl,await Promise.all(promises));if(loop&&result.finished&&(!isLoop||!result.noop)){const nextProps=createLoopUpdate(props,loop,to2);if(nextProps)return prepareKeys(ctrl,[nextProps]),flushUpdate(ctrl,nextProps,!0)}return onResolve&&raf.batchedUpdates(()=>onResolve(result,ctrl,ctrl.item)),result}function getSprings(ctrl,props){const springs={...ctrl.springs};return props&&react_spring_shared_modern_each(toArray(props),props2=>{is.und(props2.keys)&&(props2=createUpdate(props2)),is.obj(props2.to)||(props2={...props2,to:void 0}),prepareSprings(springs,props2,key=>createSpring(key))}),setSprings(ctrl,springs),springs}function setSprings(ctrl,springs){eachProp(springs,(spring,key)=>{ctrl.springs[key]||(ctrl.springs[key]=spring,addFluidObserver(spring,ctrl))})}function createSpring(key,observer){const spring=new SpringValue;return spring.key=key,observer&&addFluidObserver(spring,observer),spring}function prepareSprings(springs,props,create){props.keys&&react_spring_shared_modern_each(props.keys,key=>{(springs[key]||(springs[key]=create(key)))._prepareNode(props)})}function prepareKeys(ctrl,queue){react_spring_shared_modern_each(queue,props=>{prepareSprings(ctrl.springs,props,key=>createSpring(key,ctrl))})}var SpringContext=({children,...props})=>{const inherited=(0,react.useContext)(ctx),pause=props.pause||!!inherited.pause,immediate=props.immediate||!!inherited.immediate;props=function useMemoOne(getResult,inputs){const[initial]=(0,react.useState)(()=>({inputs,result:getResult()})),committed=(0,react.useRef)(),prevCache=committed.current;let cache=prevCache;cache?Boolean(inputs&&cache.inputs&&function areInputsEqual(next,prev){if(next.length!==prev.length)return!1;for(let i=0;i<next.length;i++)if(next[i]!==prev[i])return!1;return!0}(inputs,cache.inputs))||(cache={inputs,result:getResult()}):cache=initial;return(0,react.useEffect)(()=>{committed.current=cache,prevCache==initial&&(initial.inputs=initial.result=void 0)},[cache]),cache.result}(()=>({pause,immediate}),[pause,immediate]);const{Provider}=ctx;return react.createElement(Provider,{value:props},children)},ctx=function makeContext(target,init){return Object.assign(target,react.createContext(init)),target.Provider._context=target,target.Consumer._context=target,target}(SpringContext,{});SpringContext.Provider=ctx.Provider,SpringContext.Consumer=ctx.Consumer;var SpringRef=()=>{const current=[],SpringRef2=function(props){!function deprecateDirectCall(){warnDirectCall(`${prefix}Directly calling start instead of using the api object is deprecated in v9 (use ".start" instead), this will be removed in later 0.X.0 versions`)}();const results=[];return react_spring_shared_modern_each(current,(ctrl,i)=>{if(is.und(props))results.push(ctrl.start());else{const update2=_getProps(props,ctrl,i);update2&&results.push(ctrl.start(update2))}}),results};SpringRef2.current=current,SpringRef2.add=function(ctrl){current.includes(ctrl)||current.push(ctrl)},SpringRef2.delete=function(ctrl){const i=current.indexOf(ctrl);~i&&current.splice(i,1)},SpringRef2.pause=function(){return react_spring_shared_modern_each(current,ctrl=>ctrl.pause(...arguments)),this},SpringRef2.resume=function(){return react_spring_shared_modern_each(current,ctrl=>ctrl.resume(...arguments)),this},SpringRef2.set=function(values){react_spring_shared_modern_each(current,(ctrl,i)=>{const update2=is.fun(values)?values(i,ctrl):values;update2&&ctrl.set(update2)})},SpringRef2.start=function(props){const results=[];return react_spring_shared_modern_each(current,(ctrl,i)=>{if(is.und(props))results.push(ctrl.start());else{const update2=this._getProps(props,ctrl,i);update2&&results.push(ctrl.start(update2))}}),results},SpringRef2.stop=function(){return react_spring_shared_modern_each(current,ctrl=>ctrl.stop(...arguments)),this},SpringRef2.update=function(props){return react_spring_shared_modern_each(current,(ctrl,i)=>ctrl.update(this._getProps(props,ctrl,i))),this};const _getProps=function(arg,ctrl,index){return is.fun(arg)?arg(index,ctrl):arg};return SpringRef2._getProps=_getProps,SpringRef2};function useTransition(data,props,deps){const propsFn=is.fun(props)&&props,{reset,sort,trail=0,expires=!0,exitBeforeEnter=!1,onDestroyed,ref:propsRef,config:propsConfig}=propsFn?propsFn():props,ref=(0,react.useMemo)(()=>propsFn||3==arguments.length?SpringRef():void 0,[]),items=toArray(data),transitions=[],usedTransitions=(0,react.useRef)(null),prevTransitions=reset?null:usedTransitions.current;react_spring_shared_modern_useIsomorphicLayoutEffect(()=>{usedTransitions.current=transitions}),react_spring_shared_modern_useOnce(()=>(react_spring_shared_modern_each(transitions,t=>{ref?.add(t.ctrl),t.ctrl.ref=ref}),()=>{react_spring_shared_modern_each(usedTransitions.current,t=>{t.expired&&clearTimeout(t.expirationId),detachRefs(t.ctrl,ref),t.ctrl.stop(!0)})}));const keys=function getKeys(items,{key,keys=key},prevTransitions){if(null===keys){const reused=new Set;return items.map(item=>{const t=prevTransitions&&prevTransitions.find(t2=>t2.item===item&&"leave"!==t2.phase&&!reused.has(t2));return t?(reused.add(t),t.key):nextKey++})}return is.und(keys)?items:is.fun(keys)?items.map(keys):toArray(keys)}(items,propsFn?propsFn():props,prevTransitions),expired=reset&&usedTransitions.current||[];react_spring_shared_modern_useIsomorphicLayoutEffect(()=>react_spring_shared_modern_each(expired,({ctrl,item,key})=>{detachRefs(ctrl,ref),callProp(onDestroyed,item,key)}));const reused=[];if(prevTransitions&&react_spring_shared_modern_each(prevTransitions,(t,i)=>{t.expired?(clearTimeout(t.expirationId),expired.push(t)):~(i=reused[i]=keys.indexOf(t.key))&&(transitions[i]=t)}),react_spring_shared_modern_each(items,(item,i)=>{transitions[i]||(transitions[i]={key:keys[i],item,phase:"mount",ctrl:new Controller},transitions[i].ctrl.item=item)}),reused.length){let i=-1;const{leave}=propsFn?propsFn():props;react_spring_shared_modern_each(reused,(keyIndex,prevIndex)=>{const t=prevTransitions[prevIndex];~keyIndex?(i=transitions.indexOf(t),transitions[i]={...t,item:items[keyIndex]}):leave&&transitions.splice(++i,0,t)})}is.fun(sort)&&transitions.sort((a,b)=>sort(a.item,b.item));let delay=-trail;const forceUpdate=react_spring_shared_modern_useForceUpdate(),defaultProps=getDefaultProps(props),changes=new Map,exitingTransitions=(0,react.useRef)(new Map),forceChange=(0,react.useRef)(!1);react_spring_shared_modern_each(transitions,(t,i)=>{const key=t.key,prevPhase=t.phase,p=propsFn?propsFn():props;let to2,phase;const propsDelay=callProp(p.delay||0,key);if("mount"==prevPhase)to2=p.enter,phase="enter";else{const isLeave=keys.indexOf(key)<0;if("leave"!=prevPhase)if(isLeave)to2=p.leave,phase="leave";else{if(!(to2=p.update))return;phase="update"}else{if(isLeave)return;to2=p.enter,phase="enter"}}if(to2=callProp(to2,t.item,i),to2=is.obj(to2)?inferTo(to2):{to:to2},!to2.config){const config2=propsConfig||defaultProps.config;to2.config=callProp(config2,t.item,i,phase)}delay+=trail;const payload={...defaultProps,delay:propsDelay+delay,ref:propsRef,immediate:p.immediate,reset:!1,...to2};if("enter"==phase&&is.und(payload.from)){const p2=propsFn?propsFn():props,from=is.und(p2.initial)||prevTransitions?p2.from:p2.initial;payload.from=callProp(from,t.item,i)}const{onResolve}=payload;payload.onResolve=result=>{callProp(onResolve,result);const transitions2=usedTransitions.current,t2=transitions2.find(t3=>t3.key===key);if(t2&&(!result.cancelled||"update"==t2.phase)&&t2.ctrl.idle){const idle=transitions2.every(t3=>t3.ctrl.idle);if("leave"==t2.phase){const expiry=callProp(expires,t2.item);if(!1!==expiry){const expiryMs=!0===expiry?0:expiry;if(t2.expired=!0,!idle&&expiryMs>0)return void(expiryMs<=2147483647&&(t2.expirationId=setTimeout(forceUpdate,expiryMs)))}}idle&&transitions2.some(t3=>t3.expired)&&(exitingTransitions.current.delete(t2),exitBeforeEnter&&(forceChange.current=!0),forceUpdate())}};const springs=getSprings(t.ctrl,payload);"leave"===phase&&exitBeforeEnter?exitingTransitions.current.set(t,{phase,springs,payload}):changes.set(t,{phase,springs,payload})});const context=(0,react.useContext)(SpringContext),prevContext=function react_spring_shared_modern_usePrev(value){const prevRef=(0,react.useRef)();return(0,react.useEffect)(()=>{prevRef.current=value}),prevRef.current}(context),hasContext=context!==prevContext&&hasProps(context);react_spring_shared_modern_useIsomorphicLayoutEffect(()=>{hasContext&&react_spring_shared_modern_each(transitions,t=>{t.ctrl.start({default:context})})},[context]),react_spring_shared_modern_each(changes,(_,t)=>{if(exitingTransitions.current.size){const ind=transitions.findIndex(state=>state.key===t.key);transitions.splice(ind,1)}}),react_spring_shared_modern_useIsomorphicLayoutEffect(()=>{react_spring_shared_modern_each(exitingTransitions.current.size?exitingTransitions.current:changes,({phase,payload},t)=>{const{ctrl}=t;t.phase=phase,ref?.add(ctrl),hasContext&&"enter"==phase&&ctrl.start({default:context}),payload&&(replaceRef(ctrl,payload.ref),!ctrl.ref&&!ref||forceChange.current?(ctrl.start(payload),forceChange.current&&(forceChange.current=!1)):ctrl.update(payload))})},reset?void 0:deps);const renderTransitions=render=>react.createElement(react.Fragment,null,transitions.map((t,i)=>{const{springs}=changes.get(t)||t.ctrl,elem=render({...springs},t.item,t,i);return elem&&elem.type?react.createElement(elem.type,{...elem.props,key:is.str(t.key)||is.num(t.key)?t.key:t.ctrl.id,ref:elem.ref}):elem}));return ref?[renderTransitions,ref]:renderTransitions}var nextKey=1;var Interpolation=class extends FrameValue{constructor(source,args){super(),this.source=source,this.idle=!0,this._active=new Set,this.calc=createInterpolator(...args);const value=this._get(),nodeType=getAnimatedType(value);setAnimated(this,nodeType.create(value))}advance(_dt){const value=this._get();isEqual(value,this.get())||(getAnimated(this).setValue(value),this._onChange(value,this.idle)),!this.idle&&checkIdle(this._active)&&becomeIdle(this)}_get(){const inputs=is.arr(this.source)?this.source.map(getFluidValue):toArray(getFluidValue(this.source));return this.calc(...inputs)}_start(){this.idle&&!checkIdle(this._active)&&(this.idle=!1,react_spring_shared_modern_each(getPayload(this),node=>{node.done=!1}),globals_exports.skipAnimation?(raf.batchedUpdates(()=>this.advance()),becomeIdle(this)):frameLoop.start(this))}_attach(){let priority=1;react_spring_shared_modern_each(toArray(this.source),source=>{hasFluidValue(source)&&addFluidObserver(source,this),isFrameValue(source)&&(source.idle||this._active.add(source),priority=Math.max(priority,source.priority+1))}),this.priority=priority,this._start()}_detach(){react_spring_shared_modern_each(toArray(this.source),source=>{hasFluidValue(source)&&removeFluidObserver(source,this)}),this._active.clear(),becomeIdle(this)}eventObserved(event){"change"==event.type?event.idle?this.advance():(this._active.add(event.parent),this._start()):"idle"==event.type?this._active.delete(event.parent):"priority"==event.type&&(this.priority=toArray(this.source).reduce((highest,parent)=>Math.max(highest,(isFrameValue(parent)?parent.priority:0)+1),0))}};function isIdle(source){return!1!==source.idle}function checkIdle(active){return!active.size||Array.from(active).every(isIdle)}function becomeIdle(self){self.idle||(self.idle=!0,react_spring_shared_modern_each(getPayload(self),node=>{node.done=!0}),callFluidObservers(self,{type:"idle",parent:self}))}globals_exports.assign({createStringInterpolator:createStringInterpolator2,to:(source,args)=>new Interpolation(source,args)});frameLoop.advance;var react_dom=__webpack_require__("./node_modules/react-dom/index.js"),isCustomPropRE=/^--/;function dangerousStyleValue(name,value){return null==value||"boolean"==typeof value||""===value?"":"number"!=typeof value||0===value||isCustomPropRE.test(name)||isUnitlessNumber.hasOwnProperty(name)&&isUnitlessNumber[name]?(""+value).trim():value+"px"}var attributeCache={};var isUnitlessNumber={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},prefixes=["Webkit","Ms","Moz","O"];isUnitlessNumber=Object.keys(isUnitlessNumber).reduce((acc,prop)=>(prefixes.forEach(prefix=>acc[((prefix,key)=>prefix+key.charAt(0).toUpperCase()+key.substring(1))(prefix,prop)]=acc[prop]),acc),isUnitlessNumber);var domTransforms=/^(matrix|translate|scale|rotate|skew)/,pxTransforms=/^(translate)/,degTransforms=/^(rotate|skew)/,addUnit=(value,unit)=>is.num(value)&&0!==value?value+unit:value,isValueIdentity=(value,id)=>is.arr(value)?value.every(v=>isValueIdentity(v,id)):is.num(value)?value===id:parseFloat(value)===id,AnimatedStyle=class extends AnimatedObject{constructor({x,y,z,...style}){const inputs=[],transforms=[];(x||y||z)&&(inputs.push([x||0,y||0,z||0]),transforms.push(xyz=>[`translate3d(${xyz.map(v=>addUnit(v,"px")).join(",")})`,isValueIdentity(xyz,0)])),eachProp(style,(value,key)=>{if("transform"===key)inputs.push([value||""]),transforms.push(transform=>[transform,""===transform]);else if(domTransforms.test(key)){if(delete style[key],is.und(value))return;const unit=pxTransforms.test(key)?"px":degTransforms.test(key)?"deg":"";inputs.push(toArray(value)),transforms.push("rotate3d"===key?([x2,y2,z2,deg])=>[`rotate3d(${x2},${y2},${z2},${addUnit(deg,unit)})`,isValueIdentity(deg,0)]:input=>[`${key}(${input.map(v=>addUnit(v,unit)).join(",")})`,isValueIdentity(input,key.startsWith("scale")?1:0)])}}),inputs.length&&(style.transform=new FluidTransform(inputs,transforms)),super(style)}},FluidTransform=class extends FluidValue{constructor(inputs,transforms){super(),this.inputs=inputs,this.transforms=transforms,this._value=null}get(){return this._value||(this._value=this._get())}_get(){let transform="",identity=!0;return react_spring_shared_modern_each(this.inputs,(input,i)=>{const arg1=getFluidValue(input[0]),[t,id]=this.transforms[i](is.arr(arg1)?arg1:input.map(getFluidValue));transform+=" "+t,identity=identity&&id}),identity?"none":transform}observerAdded(count){1==count&&react_spring_shared_modern_each(this.inputs,input=>react_spring_shared_modern_each(input,value=>hasFluidValue(value)&&addFluidObserver(value,this)))}observerRemoved(count){0==count&&react_spring_shared_modern_each(this.inputs,input=>react_spring_shared_modern_each(input,value=>hasFluidValue(value)&&removeFluidObserver(value,this)))}eventObserved(event){"change"==event.type&&(this._value=null),callFluidObservers(this,event)}};globals_exports.assign({batchedUpdates:react_dom.unstable_batchedUpdates,createStringInterpolator:createStringInterpolator2,colors:{transparent:0,aliceblue:4042850303,antiquewhite:4209760255,aqua:16777215,aquamarine:2147472639,azure:4043309055,beige:4126530815,bisque:4293182719,black:255,blanchedalmond:4293643775,blue:65535,blueviolet:2318131967,brown:2771004159,burlywood:3736635391,burntsienna:3934150143,cadetblue:1604231423,chartreuse:2147418367,chocolate:3530104575,coral:4286533887,cornflowerblue:1687547391,cornsilk:4294499583,crimson:3692313855,cyan:16777215,darkblue:35839,darkcyan:9145343,darkgoldenrod:3095792639,darkgray:2846468607,darkgreen:6553855,darkgrey:2846468607,darkkhaki:3182914559,darkmagenta:2332068863,darkolivegreen:1433087999,darkorange:4287365375,darkorchid:2570243327,darkred:2332033279,darksalmon:3918953215,darkseagreen:2411499519,darkslateblue:1211993087,darkslategray:793726975,darkslategrey:793726975,darkturquoise:13554175,darkviolet:2483082239,deeppink:4279538687,deepskyblue:12582911,dimgray:1768516095,dimgrey:1768516095,dodgerblue:512819199,firebrick:2988581631,floralwhite:4294635775,forestgreen:579543807,fuchsia:4278255615,gainsboro:3705462015,ghostwhite:4177068031,gold:4292280575,goldenrod:3668254975,gray:2155905279,green:8388863,greenyellow:2919182335,grey:2155905279,honeydew:4043305215,hotpink:4285117695,indianred:3445382399,indigo:1258324735,ivory:4294963455,khaki:4041641215,lavender:3873897215,lavenderblush:4293981695,lawngreen:2096890111,lemonchiffon:4294626815,lightblue:2916673279,lightcoral:4034953471,lightcyan:3774873599,lightgoldenrodyellow:4210742015,lightgray:3553874943,lightgreen:2431553791,lightgrey:3553874943,lightpink:4290167295,lightsalmon:4288707327,lightseagreen:548580095,lightskyblue:2278488831,lightslategray:2005441023,lightslategrey:2005441023,lightsteelblue:2965692159,lightyellow:4294959359,lime:16711935,limegreen:852308735,linen:4210091775,magenta:4278255615,maroon:2147483903,mediumaquamarine:1724754687,mediumblue:52735,mediumorchid:3126187007,mediumpurple:2473647103,mediumseagreen:1018393087,mediumslateblue:2070474495,mediumspringgreen:16423679,mediumturquoise:1221709055,mediumvioletred:3340076543,midnightblue:421097727,mintcream:4127193855,mistyrose:4293190143,moccasin:4293178879,navajowhite:4292783615,navy:33023,oldlace:4260751103,olive:2155872511,olivedrab:1804477439,orange:4289003775,orangered:4282712319,orchid:3664828159,palegoldenrod:4008225535,palegreen:2566625535,paleturquoise:2951671551,palevioletred:3681588223,papayawhip:4293907967,peachpuff:4292524543,peru:3448061951,pink:4290825215,plum:3718307327,powderblue:2967529215,purple:2147516671,rebeccapurple:1714657791,red:4278190335,rosybrown:3163525119,royalblue:1097458175,saddlebrown:2336560127,salmon:4202722047,sandybrown:4104413439,seagreen:780883967,seashell:4294307583,sienna:2689740287,silver:3233857791,skyblue:2278484991,slateblue:1784335871,slategray:1887473919,slategrey:1887473919,snow:4294638335,springgreen:16744447,steelblue:1182971135,tan:3535047935,teal:8421631,thistle:3636451583,tomato:4284696575,turquoise:1088475391,violet:4001558271,wheat:4125012991,white:4294967295,whitesmoke:4126537215,yellow:4294902015,yellowgreen:2597139199}});var host=((components,{applyAnimatedValues=()=>!1,createAnimatedStyle=style=>new AnimatedObject(style),getComponentProps=props=>props}={})=>{const hostConfig={applyAnimatedValues,createAnimatedStyle,getComponentProps},animated=Component=>{const displayName=getDisplayName(Component)||"Anonymous";return(Component=is.str(Component)?animated[Component]||(animated[Component]=withAnimated(Component,hostConfig)):Component[cacheKey]||(Component[cacheKey]=withAnimated(Component,hostConfig))).displayName=`Animated(${displayName})`,Component};return eachProp(components,(Component,key)=>{is.arr(components)&&(key=getDisplayName(Component)),animated[key]=animated(Component)}),{animated}})(["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"],{applyAnimatedValues:function applyAnimatedValues(instance,props){if(!instance.nodeType||!instance.setAttribute)return!1;const isFilterElement="filter"===instance.nodeName||instance.parentNode&&"filter"===instance.parentNode.nodeName,{className,style,children,scrollTop,scrollLeft,viewBox,...attributes}=props,values=Object.values(attributes),names=Object.keys(attributes).map(name=>isFilterElement||instance.hasAttribute(name)?name:attributeCache[name]||(attributeCache[name]=name.replace(/([A-Z])/g,n=>"-"+n.toLowerCase())));void 0!==children&&(instance.textContent=children);for(const name in style)if(style.hasOwnProperty(name)){const value=dangerousStyleValue(name,style[name]);isCustomPropRE.test(name)?instance.style.setProperty(name,value):instance.style[name]=value}names.forEach((name,i)=>{instance.setAttribute(name,values[i])}),void 0!==className&&(instance.className=className),void 0!==scrollTop&&(instance.scrollTop=scrollTop),void 0!==scrollLeft&&(instance.scrollLeft=scrollLeft),void 0!==viewBox&&instance.setAttribute("viewBox",viewBox)},createAnimatedStyle:style=>new AnimatedStyle(style),getComponentProps:({scrollTop,scrollLeft,...props})=>props}),animated=host.animated}}]);